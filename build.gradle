plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.liquibase.gradle' version '2.0.1'
    id 'java'
}

compileJava {
    options.compilerArgs = [
            '-Amapstruct.defaultComponentModel=spring',
            '-Amapstruct.unmappedTargetPolicy=IGNORE',
    ]
}

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

processResources {
    from("$rootDir/lombok.config") // https://stackoverflow.com/a/51465038
}

apply from: 'versions.gradle'

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation "io.springfox:springfox-swagger2:${springFoxVersion}"
    implementation "io.springfox:springfox-swagger-ui:${springFoxVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation "org.liquibase:liquibase-core"
    implementation "io.jsonwebtoken:jjwt:${jwtVersion}"


    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'

    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor("org.mapstruct:mapstruct-processor:${mapstructVersion}")
    annotationProcessor('org.hibernate:hibernate-jpamodelgen:5.4.18.Final')

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


test {
    useJUnitPlatform()
}

group = 'com.manivchuk'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
